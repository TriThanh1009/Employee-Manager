@using QLNS.ViewModel.Dtos;
@model PagedResult<QLNS.ViewModel.Catalogs.Allowance.AllowanceViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@section Scripts{
	<script>
		setTimeout(function () {
			$('#msgAlert').fadeOut('slow');
		}, 2000);
	</script>
}
<div class="container-fluid">
	<h1 class="mt-4">Allowance</h1>
	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a asp-controller ="Home" asp-action="Index">Trang chủ</a></li>
		<li class="breadcrumb-item active">Danh sách phụ cấp</li>
	</ol>
	<div class="card mb-12">
		<div class="card-header">
			<div class="row">
				<div class="col-md-6 col-xs-12">
					<a class="btn btn-success" asp-action="Create" asp-controller="Allowance">Tạo mới</a>
				</div>
				<div class="col-md-6 col-xs-12">
					<a class="btn btn-success" asp-action="Index" asp-controller="EmployeeWithAllowance">Employee With Allowance</a>
				</div>
				<div class="col-md-6 col-xs-12">
					<form asp-action="Index" method="get">
						<div class="row">
							<div class="col-md-4">
								<input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
							</div>
							<div class="col-md-4">
							</div>
							<div class="cold-md-3">
								<button type="submit" class="btn btn-primary">Tìm</button>
								<button type="button" onclick="window.location.href='/Allowance/Index'" class="btn btn-dark">Reset</button>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>

		<div class="card-body">
			<div class="row">
				@if (ViewBag.SuccessMsg != null)
				{
					<div id="msgAlert" class="alert alert-success" role="alert">
						@ViewBag.SuccessMsg
					</div>
				}
			</div>
			<div class="table-responsive">
<table class="table">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                Money
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Money)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {  id=item.ID  }) |
                @Html.ActionLink("Details", "Details", new {  id=item.ID }) |
				@Html.ActionLink("Delete", "Delete", new {  id=item.ID })
            </td>
        </tr>
}
    </tbody>

</table>
			</div>
			@await Component.InvokeAsync("Pager", Model)
		</div>
	</div>
</div>
