@using QLNS.ViewModel.Dtos;
@model PagedResult<QLNS.ViewModel.Catalogs.Employees.EmployeeViewModel>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
	<script>
		setTimeout(function () {
			$('#msgAlert').fadeOut('slow');
		}, 2000);
	</script>
}
<div class="container-fluid">
	<h1 class="mt-4">Employee</h1>
	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
		<li class="breadcrumb-item active">Danh sách Nhân Viên</li>
	</ol>
	<div class="card mb-12">
		<div class="card-header">
			<div class="row">
				<div class="col-md-6 col-xs-12">
					<a class="btn btn-success" asp-action="Create" asp-controller="Employee">Tạo mới</a>
				</div>
				<div class="col-md-6 col-xs-12">
					<form asp-action="Index" method="get">
						<div class="row">
							<div class="col-md-4">
								<input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
							</div>
							<div class="col-md-4">
							</div>
							<div class="cold-md-3">
								<button type="submit" class="btn btn-primary">Tìm</button>
								<button type="button" onclick="window.location.href='/Employee/Index'" class="btn btn-dark">Reset</button>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>

		<div class="card-body">
			<div class="row">
				@if (ViewBag.SuccessMsg != null)
				{
					<div id="msgAlert" class="alert alert-success" role="alert">
						@ViewBag.SuccessMsg
					</div>
				}
			</div>
			<div class="table-responsive">
				<table class="table">
					<thead>
						<tr>
							<th>
								ID
							</th>
							<th>
								FirstName
							</th>
							<th>
								MiddleName
							</th>
							<th>
								LastName
							</th>
							<th>
								DOB
							</th>
							<th>
								Sex
							</th>
							<th>
								CIC
							</th>
							<th>
								NumberPhone
							</th>
							<th>
								Address
							</th>
							<th>
								Rank
							</th>
							<th>
								Position
							</th>
							<th>
								Account
							</th>
							<th>
								Password
							</th>
							<th>
								Active
							</th>
							<th>
								URLImage
							</th>
							<th></th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Items)
						{
							<tr>
								<td>
									@Html.DisplayFor(modelItem => item.ID)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.FirstName)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.MiddleName)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.LastName)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.DOB)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Sex)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.CIC)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.NumberPhone)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Address)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Rank)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Position)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Account)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Password)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Active)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.URLImage)
								</td>
								<td>
									@Html.ActionLink("Update", "Update", new {  ID=item.ID  }) |
									@Html.ActionLink("Detail", "Detail", new {  id=item.ID  }) |
									@Html.ActionLink("Delete", "Delete", new {  id=item.ID  })
								</td>
							</tr>
						}


					</tbody>
				</table>
			</div>
			@await Component.InvokeAsync("Pager", Model)
		</div>
	</div>
</div>
